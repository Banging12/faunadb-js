import type { Compiler, compilation } from 'webpack';
interface NormalModule extends compilation.Module {
    request?: string;
    userRequest?: string;
    rawRequest?: string;
    loaders?: Array<{
        loader: string;
        options: any;
    }>;
}
export interface Rule {
    test: RegExp | ((module: NormalModule) => boolean);
    modify: (source: string, filename: string) => string;
}
export declare type Options = {
    debug?: boolean;
    rules: Rule[];
};
export declare class ModifySourcePlugin {
    protected readonly options: Options;
    constructor(options: Options);
    apply(compiler: Compiler): void;
}
export {};
